<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Chi tiết đơn hàng</title>
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/searchpanes/1.4.0/js/dataTables.searchPanes.min.js"></script
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
<style>
    body {
      font-family: 'Arial', sans-serif;
      background-color: #f8f9fa;
    }

    .container {
      margin-top: 50px;
    }

    h3 {
      text-align: center;
      color: #FF593E;
    }

    #order-details {
      background-color: #ffffff;
      border: 1px solid #dcdcdc;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      padding: 20px;
    }

    #order-details p {
      margin: 10px 0;
    }

    #order-details strong {
      font-weight: bold;
    }

    .status-text {
      font-weight: bold;
      color: #007bff;
    }

    .radio-group {
      margin-top: 15px;
    }

    label {
      margin-right: 10px;
    }

    input[type="radio"] {
      margin-right: 5px;
    }
    .product-container {
  border: 1px solid #dcdcdc;
  border-radius: 8px;
  padding: 15px;
  margin-bottom: 15px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.product-container p {
  margin: 10px 0;
}

.product-container strong {
  font-weight: bold;
  color: #333;
}

.product-container:hover {
  border-color: #007bff;
}

  </style>
</head>
<body>
  <div class="container">
    <h3>Chi tiết đơn hàng</h3>
    <div id="order-details">
      <p><strong>Tên: </strong><span id="name">Đang tải...</span></p>
      <p><strong>Số điện thoại: </strong><span id="phone">Đang tải...</span></p>
      <p><strong>Địa chỉ: </strong><span id="address">Đang tải...</span></p>
      <p><strong>Ghi chú: </strong><span id="notes">Đang tải...</span></p>

      <!-- Thêm phần hiển thị sản phẩm -->
      <div id="products-section"></div>
 <p><strong>Ngày Tạo: </strong><span id="create_day">Đang tải...</span></p> 
        <p><strong>Đã thanh toán: </strong><span id="total_a">Đang tải...</span></p> 
      <p><strong>Tổng cộng: </strong><span id="total">Đang tải...</span></p>
      <p><strong>Trạng thái: <span id="status" class="status-text">Đang tải...</span></strong></p>
      
      <!-- Thêm radio group cho isPayment -->
      <div class="radio-group" id="paymentRadioGroup">
        <label for="isPayment">Trạng thái thanh toán:</label>
        <input type="radio" id="paidRadio" name="isPayment" value="true"> <label for="paidRadio">Hoàn tiền </label>
        <input type="radio" id="unpaidRadio" name="isPayment" value="false"> <label for="unpaidRadio">Chưa hoàn</label>
      </div>
    </div>
  </div>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    var idorder = window.location.href.split('/').pop();

    function updateStatus() {
      $.ajax({
        url: 'http://localhost:3000/api/order/' + idorder,
        method: 'GET',
        dataType: 'json',
        success: function (data) {
          $('#name').text(data.address.recipientName || 'Không có tên');
          $('#phone').text(data.address.phoneNumber || 'Không có số điện thoại');
          $('#address').text(data.address.addressLine || 'Không có địa chỉ');
          $('#notes').text(data.notes || 'Không có ghi chú');
          $('#total').text(data.total || 'Không có tổng cộng');
          $('#create_day').text(formatTime(data.createdAt) || 'Không có tổng cộng');
    $('#total_a').text(data.statusPayment.status_name || 'Không có tổng cộng');
          var statusText = data.status ? data.status.status_name : 'Không có trạng thái';
          $('#status').text(statusText);

          // Hiển thị sản phẩm
          displayProducts(data.products);

          // Kiểm tra xem status có id là '653bc0a72006e5791beab35b' và statusPayment có id là '654892638cd8c0661be05f7c'
          if (hasValidStatusPayment(data.status, data.statusPayment)) {
            $('#paymentRadioGroup').show();
            if (data.isPayment) {
              $('input[name="isPayment"][value="true"]').prop('checked', true);
            } else {
              $('input[name="isPayment"][value="false"]').prop('checked', true);
            }
          } else {
            $('#paymentRadioGroup').hide();
          }
        },
        error: function (error) {
          console.log('Lỗi:', error);
          $('#status').text('Lỗi khi tải trạng thái');
        }
      });
    }
function displayProducts(products) {
      var productsSection = $('#products-section');
      productsSection.empty(); // Xóa nội dung cũ

      if (products && products.length > 0) {
        for (var i = 0; i < products.length; i++) {
          var product = products[i];
          var productHtml = `
            <div class="product-container">
          <p><strong>Tên sản phẩm ${i + 1}: </strong>${product.product_name || 'Không có tên sản phẩm'}</p>
          <p><strong>Giá sản phẩm: </strong>${product.product_price || 'Không có giá sản phẩm'}</p>
          <p><strong>Số lượng sản phẩm: </strong>${product.purchase_quantity || 'Không có số lượng sản phẩm'}</p>
          <p><strong>Kích cỡ : </strong>${product.sizeName || 'Không có số lượng sản phẩm'}</p>
        </div>
          `;
          productsSection.append(productHtml);
        }
      } else {
        productsSection.append('<p>Không có sản phẩm</p>');
      }
    }
// Hàm kiểm tra xem status và statusPayment có hợp lệ không
function hasValidStatusPayment(status, statusPayment) {
  if (status && status._id === '653bc0a72006e5791beab35b' &&
    statusPayment && statusPayment._id === '654892638cd8c0661be05f7c') {
    return true;
  }
  return false;
}
$('input[name="isPayment"]').on('change', function () {
  var isPaymentValue = $(this).val();
  // Gửi yêu cầu AJAX để cập nhật trạng thái isPayment
  $.ajax({
    url: 'http://localhost:3000/api/updateIsPayment/' + idorder,
    method: 'PATCH',
    data: { isPayment: isPaymentValue },
    success: function (data) {
      Swal.fire({
        icon: 'success',
        title: 'Cập nhật thành công!',
        text: 'Trạng thái isPayment đã được cập nhật thành công.',
      }).then(function () {
        // Chuyển màn hình sau khi hiển thị thông báo thành công
        window.location.href = 'http://localhost:3000/api/getAllorderUi';
      });
      confirmOrder(idorder, isPaymentValue);
    },
    error: function (error) {
      console.log('Lỗi khi cập nhật trạng thái isPayment:', error);
    }
  });
});

    function confirmOrder(idorder, isPaymentValue) {
      var newStatus = isPaymentValue === 'true' ? '6560466ed13bcf53cec8deea' : '653bc0a72006e5791beab35b';
      // Gọi API PATCH khi nhấp vào radio button
      $.ajax({
        url: 'http://localhost:3000/api/order/' + idorder,
        method: 'PATCH',
        data: { status: newStatus },
        dataType: 'json',
        success: function (response) {
          console.log('Phản hồi từ API:', response);
          // Cập nhật bảng và tab (đoạn mã updateTable không được hiển thị)
        },
        error: function (error) {
          console.log('Lỗi:', error);
        }
      });
    }
    function formatTime(timestamp) {
  if (!timestamp) return '';

  // Create a new Date object
  var date = new Date(timestamp);

  // Format the date in the desired way
  var formattedDate = `${date.getFullYear()}-${padZero(date.getMonth() + 1)}-${padZero(date.getDate())} ${padZero(date.getHours())}:${padZero(date.getMinutes())}:${padZero(date.getSeconds())}`;

  return formattedDate;
}

function padZero(num) {
  return num < 10 ? '0' + num : num;
}


    $(document).ready(function () {
      updateStatus();
    });
  </script>
</body>
</html>

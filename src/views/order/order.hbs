<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/searchpanes/1.4.0/js/dataTables.searchPanes.min.js"></script>

  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <title>Your Page Title</title>
</head>
<style>
.table th,
.table td {

  overflow: hidden;
 
}
.table th,
.table td {
  border: 1px solid #dee2e6;
}

/* Remove border from the last column */
.table th:last-child,
.table td:last-child {
  border-right: 1px solid #dee2e6;
}
/* Chỉnh kích thước cột */
.table th:first-child,
.table td:first-child {
  width: 60px;
}

/* Xóa kích thước cố định cho các cột không cần */
.table th.detail-column,
.table td.detail-column,
.table th.confirm-column,
.table td.confirm-column {
  width: auto;
  max-width: 100px; /* Đặt chiều rộng tối đa cho các cột không có kích thước cố định */
}

.container {
  max-width: 100%; /* Đặt chiều rộng tối đa cho container */
}

.nav-tabs {
  overflow-x: auto; /* Cho phép cuộn nếu nội dung quá rộng */
  white-space: nowrap; /* Ngăn chúng xuống dòng */
}

.nav-item {
  width: auto; /* Đặt chiều rộng tự động cho các tab */
}
 .btn {
      background-color: #FF593E;
      color: aliceblue;
    }

        
</style>
<body>
 <a href="/api/search" class="btn btn-primary fa-lg gradient-custom-2 mb-3">Tìm kiếm đơn hàng</a>
 <h3>Bảng đơn hàng </h3>
  <div class="container mt-4">
    <ul class="nav nav-tabs" >
      <li class="nav-item" >
        <a class="nav-link active" id="tab-confirmed" data-toggle="tab" href="#table-confirmed">Đang chờ xác nhận</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="tab-confirmed-orders" data-toggle="tab" href="#table-confirmed-orders">Đã xác nhận đơn hàng</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="tab-pending" data-toggle="tab" href="#table-pending">Đang giao hàng </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="tab-delivered" data-toggle="tab" href="#table-delivered">Giao hàng thành công</a>
      </li>
   <li class="nav-item">
  <a class="nav-link" id="tab-delivered_refund_ordel" data-toggle="tab" href="#tab-delivered_refund_order">Đơn hủy đơn hàng</a>
</li>
    </ul>

    <div class="tab-content mt-2">
      <div class="tab-pane fade show active" id="table-confirmed">
        <table class="table" id="tab-confirmed" >
          <thead>
            <tr>
           <th style="text-align: center;">
                <input type="checkbox" id="select-all">
              </th>
              <th class="name-column" style="width: 140px;">id</th>
              <th style="width: 120px;">Điện thoại</th>
              <th>Địa chỉ</th>
              <th>Giá </th>
              <th>Trạng thái </th>
              
             
            
            </tr>
          </thead>
          <tbody>
            <!-- Dữ liệu sẽ được thêm sau khi yêu cầu AJAX được xử lý -->
          </tbody>
        </table>
      </div>
      <div class="tab-pane fade" id="table-pending">
        <table class="table" id="table-pending">
          <thead>
            <tr>
              <th class="name-column" style="width: 140px;">id</th>
               <th >Điện thoại</th>
              <th>Địa chỉ</th>
              <th >Giá </th>
              <th>Trạng thái </th>
             
            </tr>
          </thead>
          <tbody>
            <!-- Dữ liệu sẽ được thêm sau khi yêu cầu AJAX được xử lý -->
          </tbody>
        </table>
      </div>
      <div class="tab-pane fade" id="table-confirmed-orders">
        <table class="table" id="table-confirmed-orders">
          <thead>
            <tr>
             <th class="name-column" style="width: 140px;">id</th>
              <th>Điện thoại</th>
              <th>Địa chỉ</th>
              <th>Giá </th>
              <th>Trạng thái </th>
            
            </tr>
          </thead>
          <tbody>
            <!-- Dữ liệu sẽ được thêm sau khi yêu cầu AJAX được xử lý -->
          </tbody>
        </table>
      </div>
      <div class="tab-pane fade" id="table-delivered">
        <table class="table" id="table-delivered">
          <thead>
            <tr>
             <th class="name-column" style="width: 140px;">id</th>
               <th>Điện thoại</th>
              <th>Địa chỉ</th>
              <th>Giá</th>
              <th>Trạng thái </th>
            </tr>
          </thead>
          <tbody>
            <!-- Dữ liệu sẽ được thêm sau khi yêu cầu AJAX được xử lý -->
          </tbody>
        </table>
      </div>

      
     <div class="tab-pane fade" id="tab-delivered_cancel">
    <table class="table" id="tab-delivered_cancel">
          <thead>
            <tr>
             <th class="name-column" style="width: 140px;">id</th>
              <th>Điện thoại</th>
              <th>Địa chỉ</th>
              <th>Giá </th>
              <th>Trạng thái </th>
            </tr>
          </thead>
          <tbody>
            <!-- Dữ liệu sẽ được thêm sau khi yêu cầu AJAX được xử lý -->
          </tbody>
        </table>
      </div>

     <div class="tab-pane fade" id="tab-delivered_refund_order">
    <table class="table" id="tab-delivered_refund_order">
          <thead>
            <tr>
             <th class="name-column" style="width: 140px;">id</th>
              <th>Điện thoại</th>
              <th>Địa chỉ</th>
              <th>Giá </th>
              <th>Trạng thái </th>
            </tr>
          </thead>
          <tbody>
            <!-- Dữ liệu sẽ được thêm sau khi yêu cầu AJAX được xử lý -->
          </tbody>
        </table>
      </div>

     <a style="color: white;" class="btn btn-primary fa-lg gradient-custom-2 mb-3" id="confirmButton">Xác nhận</a>
    <a style="color: white;" class="btn btn-primary fa-lg gradient-custom-2 mb-3" id="cancelButton">Hủy</a>
    </div>
  </div>
  <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">


  <script>
    $(document).ready(function () {
      var sttCounter = 0;
      var statusTableMap = {
        'confirmed': '65264bc32d9b3bb388078974',
        'pending': '65264c672d9b3bb388078978',
        'confirmed-orders': '65264c102d9b3bb388078976',
        'delivered': '6526a6e6adce6a54f6f67d7d',
        'tab-delivered_cancel': '653bc0a72006e5791beab35b',
        'tab-delivered_refund': '6555a1f5b7eb118e522069a5',
        'hoanhang': '6560466ed13bcf53cec8deea'
      };
      function updateTables(tables) {
        tables.forEach(function (pair) {
          var tabId = pair.tabId;
          var tableId = pair.tableId;
          updateTable(tabId, tableId);
        });
      }
function updateTable(tabId, tableId) {
  console.log("Cập nhật bảng cho tab:", tabId);
  $.ajax({
    url: "http://localhost:3000/api/getAllOrder",
    type: "GET",
    success: function (data) {
      console.log("Dữ liệu nhận được:", data);
      var orders = Array.isArray(data) ? data : [];
      $('#' + tableId + ' tbody').empty();
      $.each(orders, function (index, order) {
        console.log("ID status của order:", order.status ? order.status._id : null);
        console.log("tabId:", tabId);
        console.log("statusTableMap[tabId]:", statusTableMap[tabId]);
        if (order.status && order.status._id === statusTableMap[tabId]) {
         var productName = order._id;
          var phone = order.address.phoneNumber ;
          var status = order.status.status_name;
          var address = order.address.addressLine;
          var total = order.total;   

          var row = '<tr>';
          if (tabId === 'confirmed') {
            row += '<td style="text-align: center;"><input type="checkbox" class="product-checkbox" data-order-id="' + order._id + '" data-product-id="' + order.products[0]._id + '"></td>';
          }
        row +=
  '<td class="name-column" data-order-id="' + order._id + '">' + productName + '</td>' +
  '<td class="phone-column" data-order-id="' + order._id + '">' + phone + '</td>' +
  '<td class="address-column" data-order-id="' + order._id + '">' + address + '</td>' +
  '<td>' + total + '</td>' +
  '<td>' + status + '</td>';

// Remove the "Chi tiết" button from the row
row += '</tr>';
          $('#' + tableId + ' tbody').prepend(row);
        } 
      });
      bindButtons(tabId);
    },
    error: function (error) {
      console.log("Lỗi khi truy xuất dữ liệu:", error);
    }
  });
}
      $('#select-all').on('click', function () {
        // Lấy trạng thái hiện tại của checkbox "select-all"
        var isChecked = $(this).prop('checked');

        // Cập nhật trạng thái của tất cả các checkbox khác trong bảng
        $('.product-checkbox').prop('checked', isChecked);
      });

function bindButtons(tabId) {
    console.log(tabId);
    $('.phone-column, .address-column').on('click', function () {
        var idorder = $(this).closest('tr').find('.name-column').data('order-id');
        window.location.href = 'http://localhost:3000/api/getByIdOder/' + idorder;
    });
}
function bindRowClickEvents(tabId) {
  // Bind click event for each row to show details
  $('#' + tabId + ' tbody tr').on('click', function () {
    var orderId = $(this).find('.name-column').data('order-id'); // Assuming .name-column contains the order ID
    showOrderDetails(orderId);
  });

  // Bind click event for phone and address columns
  $('#' + tabId + ' tbody tr .phone-column, #' + tabId + ' tbody tr .address-column').on('click', function (event) {
    event.stopPropagation(); // Prevent row click event from being triggered

    var orderId = $(this).closest('tr').find('.name-column').data('order-id');
    showOrderDetails(orderId);
  });
}

        $('#confirmButton').on('click', function () {
        var selectedProducts = [];

        // Iterate through each checked checkbox and get product ID
        $('.product-checkbox:checked').each(function () {
          var orderId = $(this).data('order-id');
          var productId = $(this).data('product-id');
          selectedProducts.push({ orderId: orderId, productId: productId });
        });

        // Check if any product is selected
        if (selectedProducts.length > 0) {
          // Show SweetAlert with the list of selected products
          Swal.fire({
            title: 'Xác nhận đơn hàng',
            html: 'Bạn có chắc chắn muốn xác nhận đơn hàng cho những sản phẩm đã chọn không?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Hủy'
          }).then((result) => {
            if (result.isConfirmed) {
              // If the user clicks "Xác nhận", proceed to confirm the selected orders
              confirmSelectedOrders(selectedProducts);
            }
          });
        } else {
          // Show an alert if no product is selected
          Swal.fire({
            icon: 'info',
            title: 'Chưa chọn sản phẩm',
            text: 'Vui lòng chọn ít nhất một sản phẩm để xác nhận đơn hàng.'
          });
        }
      });
  function confirmSelectedOrders(selectedProducts) {
        // Iterate through the selected products and confirm each order
        selectedProducts.forEach(function (selectedProduct) {
          var orderId = selectedProduct.orderId;
          confirmOrder(orderId);
        });

        // After successfully confirming the orders, update the table data
        var tabId = 'confirmed'; // Replace with the appropriate tabId
        var tableId = 'tab-' + tabId;
        updateTable(tabId, tableId);
      }

function confirmOrder(idorder) {
    $.ajax({
          url: 'http://localhost:3000/api/order/' + idorder,
          method: 'PATCH',
          data: { status: '65264c102d9b3bb388078976' },
          dataType: 'json',
          success: function (response) {
            var tabId = 'confirmed'; // Replace with the appropriate tabId
            var tableId = 'tab-' + tabId;
            
            updateTable(tabId, tableId);
             window.location.href = 'http://localhost:3000/api/getAllorderUi';
          },
          error: function (error) {
            console.log('Lỗi:', error);
          }
        });
      }


   function toggleButtonsVisibility(tabId) {
    // Toggle the visibility of buttons based on the active tab
    if (tabId === 'tab-confirmed') {
      $('#confirmButton, #cancelButton').show();
    } else {
      $('#confirmButton, #cancelButton').hide();
    }
  }

      $('.nav-tabs a').on('shown.bs.tab', function (e) {
        var tabId = $(e.target).attr('id').replace('tab-', '');
        console.log("tabId:", tabId);
        var tableId = 'table-' + tabId;
        updateTable(tabId, tableId);
      });


      // Initial data load for active tab
      var tablesToUpdate = [
        { tabId: 'confirmed', tableId: 'tab-confirmed' },
        { tabId: 'pending', tableId: 'table-pending' },
        { tabId: 'confirmed-orders', tableId: 'table-confirmed-orders' },
        { tabId: 'delivered', tableId: 'table-delivered' },
        { tabId: 'tab-delivered_cancel', tableId: 'tab-delivered_refund_order' },
        { tabId: 'hoanhang', tableId: 'tab-delivered_refund' },
      ];

      updateTables(tablesToUpdate);
       

  // Show buttons only when the "Đang chờ xác nhận" tab is active
  $('.nav-tabs a').on('click', function () {
    var tabId = $(this).attr('id');
    toggleButtonsVisibility(tabId);
  });

      $('#cancelButton').on('click', function () {
  var selectedProducts = getSelectedOrders();
  
  if (selectedProducts.length > 0) {
    // Show SweetAlert with the list of selected products
    Swal.fire({
      title: 'Hủy đơn hàng',
      html: 'Bạn có chắc chắn muốn hủy đơn hàng cho những sản phẩm đã chọn không?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Hủy đơn',
      cancelButtonText: 'Hủy bỏ'
    }).then((result) => {
      if (result.isConfirmed) {
        // If the user clicks "Hủy đơn", proceed to cancel the selected orders
        cancelSelectedOrders(selectedProducts);
      }
    });
  } else {
    // Show an alert if no product is selected
    Swal.fire({
      icon: 'info',
      title: 'Chưa chọn sản phẩm',
      text: 'Vui lòng chọn ít nhất một sản phẩm để hủy đơn hàng.'
    });
  }
});

function getSelectedOrders() {
  var selectedProducts = [];

  // Iterate through each checked checkbox and get order ID
  $('.product-checkbox:checked').each(function () {
    var orderId = $(this).data('order-id');
    selectedProducts.push({ orderId: orderId });
  });

  return selectedProducts;
}

function cancelSelectedOrders(selectedProducts) {
  // Iterate through the selected orders and cancel each order
  selectedProducts.forEach(function (selectedProduct) {
    var orderId = selectedProduct.orderId;
    cancelOrder(orderId);
  });

  var tabId = 'tab-delivered_cancel'; 
  var tableId = 'tab-' + tabId;
  updateTable(tabId, tableId);
}

function cancelOrder(idorder) {
  $.ajax({
    url: 'http://localhost:3000/api/order/' + idorder,
    method: 'PATCH',
    data: { status: '653bc0a72006e5791beab35b' },
    dataType: 'json',
    success: function (response) {
      var tabId = 'tab-delivered_cancel'; // Replace with the appropriate tabId
      var tableId = 'tab-' + tabId;

   updateTable(tabId, tableId);
    window.location.href = 'http://localhost:3000/api/getAllorderUi';
    },
    error: function (error) {
      console.log('Lỗi:', error);
    }
  });
}
});
  </script>



</body>

</html>
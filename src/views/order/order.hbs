<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Hiển thị dữ liệu API theo trạng thái</title>
  <!-- CSS styles for your page -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css">
  <link rel="stylesheet" href="https://cdn.datatables.net/searchpanes/1.4.0/css/searchPanes.dataTables.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="style.css"> <!-- Your custom CSS file -->

  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
    }

    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      background-color: #fff;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
      border-radius: 5px;
    }

    .bordered-table {
      border: 1px solid #ccc;
      margin: 10px 0;
      padding: 10px;
      border-radius: 5px;
      background-color: #f9f9f9;
    }

    h3 {
      text-align: center;
      color: #333;
    }

    table.table-striped {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }

    table.table-striped th, table.table-striped td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    .name-column {
      max-width: 200px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      cursor: help;
    }

    .btn {
      background-color: #FF593E;
      color: #fff;
      padding: 8px 16px;
      border: none;
      border-radius: 3px;
      cursor: pointer;
    }

    .dataTables_info {
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="bordered-table">
      <h3>Order Table - Xác nhận</h3>
      <table id="confirmedTable" class="table table-striped">
        <thead>
          <tr>
            <th>STT</th>
            <th class="name-column">Name</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Notes</th>
            <th>Total</th>
            <th>Status</th> <!-- Giữ "Status" trong bảng Xác nhận -->
          </tr>
        </thead>
      </table>
    </div>

    <div class="bordered-table">
      <h3>Order Table - Đang giao</h3>
      <table id="shippingTable" class="table table-striped">
        <thead>
          <tr>
            <th>STT</th>
            <th class="name-column">Name</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Notes</th>
            <th>Total</th>
            <th>Status</th> <!-- Giữ "Status" trong bảng Đang giao -->
          </tr>
        </thead>
      </table>
    </div>

    <div class="bordered-table">
      <h3>Order Table - Đang chuẩn bị</h3>
      <table id="preparingTable" class="table table-striped">
        <thead>
          <tr>
            <th>STT</th>
            <th class="name-column">Name</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Notes</th>
            <th>Total</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </div>

  <!-- JavaScript libraries -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/searchpanes/1.4.0/js/dataTables.searchPanes.min.js"></script>

  <script>
    $(document).ready(function () {
      var tableIndices = {
        'confirmedTable': 1,
        'shippingTable': 1,
        'preparingTable': 1
      };

      function initializeDataTable(tableId) {
        if (!$.fn.dataTable.isDataTable('#' + tableId)) {
          $('#' + tableId).DataTable({
            paging: false,
          });
        }
      }

      // Mảng để lưu trữ các đơn đặt hàng có trạng thái "đang chuẩn bị" cùng với trạng thái tương ứng
      var preparingOrders = [];

      // AJAX request to fetch data
      $.ajax({
        url: 'http://localhost:3000/api/getAllorder',
        method: 'GET',
        dataType: 'json',
        success: function (data) {
          data.forEach(function (order) {
            var productNames = order.products.map(function (product) {
              return product.product_name;
            }).join(', ');

            var nameLink = productNames;
            var phone = order.address.phoneNumber;
            var address = order.address.addressLine;
            var notes = order.notes;
            var total = order.total;
            var status = order.status;

            if (status.status_name.toLowerCase() === 'đang chuẩn bị') {
              // Thay "Status" thành nút "Action" trong bảng Đang chuẩn bị
              var targetTable = 'preparingTable';
              initializeDataTable(targetTable);
              var table = $('#' + targetTable).DataTable();
              var currentIndex = tableIndices[targetTable];
              var button = '<button class="btn btn-action" data-order-id="' + order._id + '" data-status-id="' + status._id + '">Action</button>';
              table.row.add([
                currentIndex,
                nameLink,
                phone,
                address,
                notes,
                total,
                button,
              ]).draw();
              tableIndices[targetTable]++;

              // Lưu đơn đặt hàng và trạng thái tương ứng vào mảng preparingOrders
              preparingOrders.push({ orderId: order._id, statusId: status._id });
            } else {
              // Giữ nguyên "Status" trong các bảng còn lại
              var targetTable = 'confirmedTable';
              if (status.status_name.toLowerCase() === 'đang giao') {
                targetTable = 'shippingTable';
              }
              initializeDataTable(targetTable);
              var table = $('#' + targetTable).DataTable();
              var currentIndex = tableIndices[targetTable];
              table.row.add([
                currentIndex,
                nameLink,
                phone,
                address,
                notes,
                total,
                status.status_name,
              ]).draw();
              tableIndices[targetTable]++;
            }
          });

          // Bắt sự kiện khi nút "Action" trong bảng "Đang chuẩn bị" được nhấn
          $('#preparingTable tbody').on('click', 'button.btn-action', function () {
            var orderId = $(this).data('order-id');
            var statusId = $(this).data('status-id');

            // Gọi API PATCH để cập nhật trạng thái từ "đang chuẩn bị" thành "đang giao"
            $.ajax({
              url: 'http://localhost:3000/api/order/' + orderId,
              method: 'PATCH',
              data: { status: '65435b342b44ca2d4c364a71' },
              dataType: 'json',
              success: function (response) {
                // Xử lý dữ liệu từ API (response) theo cách bạn muốn
                console.log('API response:', response);

                // Sau khi cập nhật thành công, bạn có thể làm các thay đổi cần thiết trên bảng
                // Ví dụ: Xóa hàng khỏi bảng "Đang chuẩn bị" và thêm vào bảng "Đang giao"
                var preparingTable = $('#preparingTable').DataTable();
                var shippingTable = $('#shippingTable').DataTable();
                // Xóa hàng khỏi bảng "Đang chuẩn bị"
                preparingTable.row($(this).parents('tr')).remove().draw();
                // Tìm đơn đặt hàng và trạng thái tương ứng trong mảng preparingOrders và cập nhật trạng thái thành "đang giao"
                var orderIndex = preparingOrders.findIndex(function (item) {
                  return item.orderId === orderId && item.statusId === statusId;
                });
                if (orderIndex !== -1) {
                  preparingOrders.splice(orderIndex, 1);
                }
                // Thêm đơn đặt hàng vào bảng "Đang giao"
                shippingTable.row.add([
                  preparingOrders.length + 1,
                  nameLink,
                  phone,
                  address,
                  notes,
                  total,
                  'đang giao',
                ]).draw();
              },
              error: function (error) {
                console.log('Error:', error);
              }
            });
          });
        },
        error: function (error) {
          console.log('Error:', error);
        }
      });
    });
  </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Hiển thị dữ liệu API</title>

  <title>Hiển thị dữ liệu API</title>
  <link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css">
  <link rel="stylesheet" href="https://cdn.datatables.net/searchpanes/1.4.0/css/searchPanes.dataTables.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <!-- SweetAlert2 -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/searchpanes/1.4.0/js/dataTables.searchPanes.min.js"></script>



  <style>

     /* Style the switch */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider (round) */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 34px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

/* When the checkbox is checked, change the background color of the slider */
.switch input:checked + .slider {
  background-color: #2196F3;
}

/* When the checkbox is checked, translate the position of the round slider */
.switch input:checked + .slider:before {
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
#datatable th:nth-child(3),
#datatable td:nth-child(3) {
  width: 80px; /* Điều chỉnh kích thước cột giá tùy theo nhu cầu của bạn */
  max-width: 80px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
#datatable th:nth-child(6),
#datatable td:nth-child(6) {
  width: 80px; /* Điều chỉnh kích thước cột giá tùy theo nhu cầu của bạn */
  max-width: 80px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#datatable th:nth-child(1),
#datatable td:nth-child(1) {
  width: 80px; /* Điều chỉnh kích thước cột giá tùy theo nhu cầu của bạn */
  max-width: 80px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
/* Bổ sung thêm kiểu để tránh làm mất dữ liệu hiển thị trong cột */
#datatable td:nth-child(6) {
  text-align: center; /* Căn giữa nếu cần thiết */
}
#datatable td:nth-child(5) {
  text-align: center; /* Căn giữa nếu cần thiết */
}
  </style>
</head>

<body>
 <div class="container section-container">
    <a href="/api/admin/products/create" class="btn btn-primary fa-lg gradient-custom-2 mb-3">Tạo sản phẩm mới</a>
    <h3>Bảng sản phẩm </h3>
    <table id="datatable" class="table table-striped table-bordered" style="width:100%">
      <thead>
        <tr>
  
          <th style="color: #000000">Ảnh</th>
          <th style="color: #000000">Tên sản phẩm</th>
          <th style="color: #000000">Giá </th>
          <th style="color: #000000">Danh mục</th>
          <th style="color: #000000">Chi tiết</th>
          <th style="color: #000000">Bán</th>
        </tr>
      </thead>
      <tbody>
        {{#each data}}
        <tr>
          
          <td><img src="{{this.images.0.url}}" alt="Product Image" width="100px" height="60px" id="img-preview"></td>
          <td>{{this.product_name}}</td>
          <td>{{this.product_price}} VND</td>

          <td class="category-cell" data-category-id="{{this.categoryId}}">Loading...</td>
          <td style="width: 80px;"><a href="/api/admin/products/{{this._id}}" class="btn btn-primary fa-lg gradient-custom-2 mb-3">Chi tiết</a></td>
        <td>
  <label class="switch">
    <input type="checkbox" class="btn-toggle-active" data-product-id="{{this._id}}" {{#if this.isActive}}checked{{/if}}>
    <span class="slider round"></span>
  </label>
</td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
<script>
  // Xử lý sự kiện change cho checkbox toggle-active
  $(document).on('change', '.btn-toggle-active', function () {
    // Lưu giữ tham chiếu đến phần tử hiện tại
    const checkbox = $(this);

    const productId = checkbox.data('product-id');
    const isActive = checkbox.is(':checked'); // Sử dụng is(':checked') để kiểm tra checkbox
    const productName = checkbox.closest('tr').find('td:eq(1)').text(); // Lấy tên sản phẩm từ cột thứ 2 (index 1)

    // Hiển thị hộp thoại xác nhận
    const confirmMessage = `Bạn có chắc chắn muốn ${isActive ? 'bật' : 'tắt'} sản phẩm ${productName} không?`;
    Swal.fire({
      title: 'Thông báo',
      text: confirmMessage,
      icon: 'info',
      showCancelButton: true, // Hiển thị nút Hủy
      confirmButtonText: 'Đồng ý',
      cancelButtonText: 'Hủy'
    }).then((result) => {
      if (result.isConfirmed) {
        // Nếu người dùng đồng ý, thực hiện các bước sau
        console.log('Product ID:', productId);

        // Gửi yêu cầu PATCH tới API để cập nhật trạng thái isActive của sản phẩm
        $.ajax({
          type: 'PATCH',
          url: `http://localhost:3000/api/toggleActive/${productId}`,
          success: function (data) {
            // Cập nhật trạng thái của checkbox
            checkbox.prop('checked', isActive); // Sử dụng giá trị thực tế của isActive
          },
          error: function (error) {
            console.error('Lỗi khi chuyển đổi trạng thái kích hoạt:', error);
          }
        });

        Swal.fire({
          title: 'Thành công',
          text: `Sản phẩm ${productName} đã được ${isActive ? 'bật' : 'tắt'}.`,
          icon: 'success',
          confirmButtonText: 'OK'
        });
      } else {
        // Nếu người dùng không đồng ý, đảm bảo checkbox không thay đổi
        checkbox.prop('checked', !isActive);
      }
    });
  });

  $.get('http://localhost:3000/api/categories', function (categories) {
    const categoryMap = {};

    categories.forEach(function (category) {
      categoryMap[category._id] = category.category_name;
    });

    $('.category-cell').each(function () {
      const categoryId = $(this).data('category-id');
      const categoryName = categoryMap[categoryId];
      console.log(categoryName)
      $(this).text(categoryName);
    });
  });

  $(document).ready(function () {
    $('#datatable').DataTable({});
  });

 
</script>

</body>

</html>

<!DOCTYPE html>
<html lang="en">

<head>
  <link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://cdn.datatables.net/searchpanes/1.4.0/css/searchPanes.dataTables.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/searchpanes/1.4.0/js/dataTables.searchPanes.min.js"></script>
  <link rel="stylesheet" href="style.css">
</head>
<style>

  /* When the checkbox is checked, change the background color of the slider */
.switch input:checked + .slider {
  background-color: #2196F3;
}

/* When the checkbox is checked, translate the position of the round slider */
.switch input:checked + .slider:before {
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
body {
  font-family: Arial;
  margin: 0;
}


/* Position the image container (needed to position the left and right arrows) */
.slideshow-container {
  position: relative;
  max-width: 500px; /* Điều chỉnh kích thước tối đa của slideshow container */
  margin: auto;
}

/* Hide the images by default */
.mySlides {
  display: none;
}

/* Add a pointer when hovering over the thumbnail images */
.cursor {
  cursor: pointer;
}

/* Next & previous buttons */
.prev,
.next {
  cursor: pointer;
  position: absolute;
  top: 40%; /* Điều chỉnh vị trí để đưa vào giữa ảnh */
  width: auto;
  padding: 16px;
  color: white;
  font-weight: bold;
  font-size: 20px;
  border-radius: 3px;
  user-select: none;
  -webkit-user-select: none;
  transition: background-color 0.3s; /* Thêm hiệu ứng mượt mà khi hover */
}

/* Position the "next button" to the right */
.next {
  right: 0;
  border-radius: 3px 0 0 3px;
}

/* Position the "prev button" to the left */
.prev {
  left: 0;
  border-radius: 0 3px 3px 0;
}

/* On hover, add a black background color with a little bit see-through */
.prev:hover,
.next:hover {
  background-color: rgba(0, 0, 0, 0.8);
}

/* Number text (1/3 etc) */
.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
}

/* Container for image text */
.caption-container {
  text-align: center;
  background-color: #222;
  padding: 2px 16px;
  color: white;
}

.row:after {
  content: "";
  display: table;
  clear: both;
}

/* Three columns side by side */
.column {
  float: left;
  width: 33.33%;
  padding: 8px;
}

/* Add a transparency effect for thumbnail images */
.demo {
  opacity: 0.6;
}

.active,
.demo:hover {
  opacity: 1;
}

/* Adjusted dimensions for slideshow images and thumbnails */
.mySlides img,
.demo img {
  width: 100%; /* Đảm bảo ảnh và thumbnail đều chiếm toàn bộ width của container */
  height: auto;
  max-width: 500px; /* Đặt chiều rộng tối đa của ảnh */
}

/* Additional styling for the caption */
#caption {
  display: block;
  margin-top: 8px;
  font-size: 14px;
  color: #f2f2f2;
}

  .size-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    border: 1px solid #ddd;
    margin-bottom: 10px;
  }

  .size-name {
    flex-grow: 1;
    margin-right: 10px;
  }

  .remove-button {
    cursor: pointer;
  }


</style>
<body>
  <div class="container">
  <h3>Chi tiết sản phẩm</h3>
    <div class="row">
       <div class="col-md-6">
        <div class="mb-3">
        
          <form action="http://localhost:3000/api/updatebyadmin/products/{{data._id}}" method="post" id="updateForm" enctype="multipart/form-data">
            <div class="mb-3">
              <label class="form-label">Ảnh</label>
              <div class="d-flex flex-column ">
               <div class="slideshow-container">

    <div class="mySlides">
      <div class="numbertext">1 / 3</div>
      <img src="{{data.images.0.url}}" alt="" style="width:500px; height: 500px;">
    </div>

    <div class="mySlides">
      <div class="numbertext">2 / 3</div>
      <img src="{{data.images.1.url}}" alt="" style="width:500px; height: 500px;">
    </div>

    <div class="mySlides">
      <div class="numbertext">3 / 3</div>
      <img src="{{data.images.2.url}}" alt="" style="width:500px; height: 500px;">
    </div>
    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
    <a class="next" onclick="plusSlides(1)">&#10095;</a>
    <div class="caption-container">
      <p id="caption"></p>
    </div>
    <div class="row">
      <div class="column">
        <img class="demo cursor" src="{{data.images.0.url}}" style="width:100px ; height: 100px;" onclick="currentSlide(1)" alt="Ảnh 1">
      </div>
      <div class="column">
        <img class="demo cursor" src="{{data.images.1.url}}" style="width:100px ; height: 100px;" onclick="currentSlide(2)" alt="Ảnh 2">
      </div>
      <div class="column">
        <img class="demo cursor" src="{{data.images.2.url}}"style="width:100px ; height: 100px;" onclick="currentSlide(3)" alt="Ảnh 3">
      </div>
    </div>
  </div>
              </div>
              <input type="file" class="form-control mt-3" id="images" name="images" accept="image/*" multiple >
            </div>
          </div>
      </div>
      <div class="col-md-6">
        <div class="mb-3">
          <label class="form-label">Tên sản phẩm</label>
          <input class="form-control" name="product_name" id="product_name" required="required" value="{{data.product_name}}">
          <div id="emailHelp" class="form-text"></div>
          <label class="form-label">Địa chỉ</label>
          <textarea class="form-control" style="height: 300px;" name="description" id="description" required="required">{{data.description}}</textarea>
          
  <div class="w3-container">
    <body data-product-id="{{data._id}}">
        <label class="form-label">Kích cỡ</label>
        <ul class="w3-ul w3-card-4" id="sizeList">

        </ul>
    </body>
</div>

 <div class="w3-container">
    <body data-product-id="{{data._id}}">
        <label class="form-label">Topping</label>
     <ul id="toppingList" class="w3-ul w3-card-4"></ul>

        </ul>
    </body>
</div>

          <div class="mb-3">
            <label class="form-label">Giá sản phẩm</label>
            <input type="number" class="form-control" name="product_price" id="product_price" required="required" value="{{data.product_price}}">
            <div id="emailHelp" class="form-text"></div>
            <div id="emailHelp" class="form-text">Vui lòng nhập giá</div>
          </div>
          <div class="mb-3">
            <label class="form-label">Danh mục</label>
            <select class="form-control" name="categoryId" id="categoryId" required>
            </select>
          </div>

          <div class="mb-3">
            <button type="submit "class="btn btn-primary fa-lg gradient-custom-2 mb-3" style="float: right;">Cập nhật</button>
          </div>
          </form>
        </div>
      </div>
    </div>
  </div>

      <div class="row">
      <div class="col">
        <button type="button" class="btn btn-primary fa-lg gradient-custom-2 mb-3" data-bs-toggle="modal" data-bs-target="#toppingModal" style="margin-left: 25px;">
         Thêm topping
        </button>
        <!-- Size Modal -->
        <div class="modal" tabindex="-1" role="dialog" id="toppingModal">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">Thêm kích cỡ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
               
                <form id="sizeForm">
                  <div class="mb-3">
                    <label for="name" class="form-label">Tên đồ ăn kèm </label>
                    <input type="text" class="form-control" id="name" required>
                  </div>
                  <div class="mb-3">
                    <label for="size" class="form-label">Giá đồ ăn kèm</label>
                    <input type="number" class="form-control" id="size" required>
                  </div>
                  <input type="hidden" id="productId" value="{{data._id}}">
                  <button type="button" class="btn btn-primary" onclick="addTopping()">Thêm</button>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
       
    <div class="row">
      <div class="col">
        <button type="button" class="btn btn-primary fa-lg gradient-custom-2 mb-3" data-bs-toggle="modal" data-bs-target="#sizeModal" style="margin-left: 25px;">
          Thêm kích cỡ
        </button>
        <!-- Size Modal -->
        <div class="modal" tabindex="-1" role="dialog" id="sizeModal">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">Thêm kích cỡ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
              
                <form id="sizeForm">
                  <div class="mb-3">
                    <label for="sizeName" class="form-label">Tên kích cỡ</label>
                    <input type="text" class="form-control" id="size_name" required>
                  </div>
                  <div class="mb-3">
                    <label for="priceSize" class="form-label">Giá kích cỡ</label>
                    <input type="number" class="form-control" id="size_price" required>
                  </div>
                  <input type="hidden" id="productId" value="{{data._id}}">
                  <button type="button" class="btn btn-primary" onclick="addSize()">Thêm</button>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  <div class="col-md-6">
    <form action="http://localhost:3000/api/remove/products/{{data._id}}" method="get" id="removeForm">
      <button type="submit" class="btn btn-primary fa-lg gradient-custom-2 mb-3" style="margin-top: -54px; margin-left: 150px; float: left;" >Xóa</button>
    </form>
  </div>
  <script>
   function addSize() {
  const sizeName = document.getElementById('size_name').value;
  const priceSize = document.getElementById('size_price').value;
  const productId = document.getElementById('productId').value;

  const sizeData = {
    size_name: sizeName,
    size_price: priceSize,
    productId: productId
  };

  $.ajax({
    type: 'POST',
    url: 'http://localhost:3000/api/size',
    contentType: 'application/json',
    data: JSON.stringify(sizeData),
    success: function (response) {
      console.log('Size added successfully:', response);
      $('#sizeModal').modal('hide');
      window.location.href = 'http://localhost:3000/api/admin/products/' + productId;
    },
    error: function (xhr, status, error) {
      console.error('Error adding size:', error);
     
      alert('Error adding size. Please check the console for more details.');
    }
  });
}

  function addTopping() {
    const toppingName = document.getElementById('name').value;
    const toppingPrice = document.getElementById('size').value;
    const productId = document.getElementById('productId').value;

    const toppingData = {
      name: toppingName,
      price: toppingPrice,
      productId: productId
    };

    $.ajax({
      type: 'POST',
      url: 'http://localhost:3000/api/topping',
      contentType: 'application/json',
      data: JSON.stringify(toppingData),
      success: function (response) {
        console.log('Topping added successfully:', response);
        $('#toppingModal').modal('hide');
              window.location.href = 'http://localhost:3000/api/admin/products/' + productId;
      },
      error: function (xhr, status, error) {
        console.error('Error adding topping:', error);
      
        alert('Error adding topping. Please check the console for more details.');
      }
    });
  }
    $(document).ready(async function () {
      try {
     
        const response = await fetch('http://localhost:3000/api/categories');
        const data = await response.json();

        $('#categoryId').html('');
        data.forEach(category => {
          const option = $('<option>', {
            value: category._id,
            text: category.category_name,
          });
          $('#categoryId').append(option);
        });
      } catch (error) {
        console.error("Error fetching categories:", error);
      }

      document.getElementById('updateForm').addEventListener('submit', function (event) {
        const confirmUpdate = confirm("Do you really want to update this?");
        if (!confirmUpdate) {
          event.preventDefault();
        } else {
          if (window.location.href.includes('/api/admin/products')) {
            window.location.href = 'http://localhost:3000/api/admin/products';
          }
        }
      });

      document.getElementById('removeForm').addEventListener('submit', function (event) {
        const confirmRemove = confirm("Do you really want to remove this?");
        if (!confirmRemove) {
          event.preventDefault();
        } else {
          if (window.location.href.includes('/api/admin/products')) {
            window.location.href = 'http://localhost:3000/api/admin/products';
          }
        }
      });

      const fileInput = document.getElementById("images");
      const imgPreview = document.getElementById("img-preview");
      
      fileInput.addEventListener('change', function () {
        if (fileInput.files && fileInput.files[0]) {
          let reader = new FileReader();
          reader.onload = function (e) {
            imgPreview.src = e.target.result;
          };
          reader.readAsDataURL(fileInput.files[0]);
        } else {
          console.log("No image file selected");
        }
      });

      window.addEventListener('popstate', function (event) {
        window.location.reload();
      });
    });

  </script>

  <script>
let slideIndex = 1;
showSlides(slideIndex);

function plusSlides(n) {
  showSlides(slideIndex += n);
}

function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides(n) {
  let i;
  let slides = document.getElementsByClassName("mySlides");
  let dots = document.getElementsByClassName("demo");
  let captionText = document.getElementById("caption");
  if (n > slides.length) {slideIndex = 1}
  if (n < 1) {slideIndex = slides.length}
  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block";
  dots[slideIndex-1].className += " active";
  captionText.innerHTML = dots[slideIndex-1].alt;
}
  </script>

    <script>
$(document).ready(async function () {
    try {
      const productId = $('body').data('product-id');
      const sizeResponse = await fetch(`http://localhost:3000/api/size/product/${productId}`);
      const sizeData = await sizeResponse.json();

      // Display size names in the sizeList ul
      const sizeList = $('#sizeList');

      sizeData.forEach(size => {
        const listItem = $('<li>', {
          class: 'size-item',
        });

        const sizeName = $('<span>', {
          class: 'size-name',
          text: size.size_name,
        });

      const closeButton = $('<button>', {
    class: 'remove-button',
    text: '×',
    click: function() {
        const confirmed = confirm("Are you sure you want to delete this size?");
        if (confirmed) {
            removeSize(this, size._id);
        }
    }
});

        listItem.append(sizeName, closeButton);
        sizeList.append(listItem);
      });
    } catch (error) {
      console.error('Error fetching size data:', error);
    }

    // ... Existing code ...
  });

  
</script>


  <script>
$(document).ready(async function () {
    try {
        const productId = $('body').data('product-id');
        const toppingResponse = await fetch(`http://localhost:3000/api/topping/${productId}`);
        const toppingData = await toppingResponse.json();
        const toppingList = $('#toppingList');
        toppingData.forEach(topping => {
 const listItem = $('<li>', {
    class: 'size-item',
});
            const toppingName = $('<span>', {
                class: 'name',
                text: topping.name, 
            });

     const checkbox = $('<input>', {
    type: 'checkbox',
    class: 'checkbox-toggle-active',
    checked: topping.isActive, 
    click: function () {
        toggleToppingStatus(topping._id, this.checked);
    }
});


listItem.append(toppingName, checkbox);


toppingList.append(listItem);
        });
    } catch (error) {
        console.error('Error fetching topping data:', error);
    }
});


function toggleToppingStatus(toppingId, isChecked) {
    fetch(`http://localhost:3000/api/topping/${toppingId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ isActive: isChecked }),
    })
    .then(response => response.json())
    .then(data => {
        console.log('Topping status updated successfully:', data);
        // Hiển thị thông báo thành công
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Topping status updated successfully!',
        });
    })
    .catch(error => {
        console.error('Error updating topping status:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Error updating topping status. Please check the console for more details.',
        });
    });
}
</script>

<script>
   function removeSize(button, sizeId) {
    var listItem = $(button).parent();
    callApiToDeleteSize(sizeId);
    listItem.remove();
  }

    function callApiToDeleteSize(sizeId) {
        var apiUrl = 'http://localhost:3000/api/delete/size/' + sizeId;

        fetch(apiUrl, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
        })
        .catch(error => {
            console.error('There was a problem with the fetch operation:', error);
        });
    }
</script>
</body>
</html>
